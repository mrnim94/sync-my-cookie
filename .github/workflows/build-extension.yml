name: Build Chrome Extension

on:
  push:
    branches: [ main, master, develop, feat/manifestV3 ]
  pull_request:
    branches: [ main, master, develop, feat/manifestV3 ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Lint code
      run: yarn lint
      
    - name: Build extension
      run: yarn build
      
    - name: Create extension package
      run: |
        cd build
        zip -r ../sync-my-cookie-extension.zip .
        cd ..
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sync-my-cookie-extension-node-${{ matrix.node-version }}
        path: |
          build/
          sync-my-cookie-extension.zip
        retention-days: 30
        
    - name: Upload extension zip only
      uses: actions/upload-artifact@v4
      with:
        name: sync-my-cookie-extension-zip-node-${{ matrix.node-version }}
        path: sync-my-cookie-extension.zip
        retention-days: 90

  build-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Build extension
      run: yarn build
      
    - name: Create extension package
      run: |
        cd build
        zip -r ../sync-my-cookie-extension-${{ github.event.release.tag_name }}.zip .
        cd ..
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./sync-my-cookie-extension-${{ github.event.release.tag_name }}.zip
        asset_name: sync-my-cookie-extension-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip
